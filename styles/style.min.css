/*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}template{display:none}[hidden]{display:none}.header{display:flex;padding-top:5px}.header>div{flex-grow:1;display:flex;align-items:center}.header>div:nth-child(2){justify-content:flex-end}.header img{color:#ffbe58}.header label{width:100px;height:35px;background-color:#4caf50;color:#fff;font-size:13px;margin:0 15px;padding:5px;-webkit-border-top-right-radius:5px;-moz-border-top-right-radius:5px;-ms-border-top-right-radius:5px;border-top-right-radius:5px;-webkit-border-bottom-right-radius:5px;-moz-border-bottom-right-radius:5px;-ms-border-bottom-right-radius:5px;border-bottom-right-radius:5px}.fa{color:#000;font-size:24px}.button{color:#fff;background-color:#967011;padding:3px 15px;border:none;-webkit-border-radius:50px;-moz-border-radius:50px;-ms-border-radius:50px;border-radius:50px}.button:hover{cursor:pointer}.navigation{background-color:#6d6f78;display:flex;align-items:center}.navigation ul{display:flex;justify-content:space-around;flex:2;margin:0}.navigation ul li{list-style:none}.navigation ul li a{padding:15px 30px;display:inline-block;color:#fff;text-decoration:none;transition:.1s linear}.navigation ul li a:hover{color:#6d6f78;background-color:#f0f0f1}.navigation .burger-menu,.navigation .menu-btn{display:none}.close-menu-btn,.menu-btn{text-decoration:none;color:#fff}.close-menu-btn{padding-left:40px}.nav-wrapper{display:flex}.item-info{border:1px solid #f0f0f1;display:flex;margin-top:20px;padding:10px}.preview{flex:2}.preview span{font-size:13px;color:#26a688}.description{flex:1;display:flex;align-items:center;justify-content:center;border-left:1px solid #f0f0f1}.thumb{min-height:165px;margin-top:5px}.promo{margin:20px 0;display:flex;justify-content:space-between}.promo>div{max-width:49%;flex:1;border:1px solid #f0f0f1;padding:10px}.items-list ul{list-style:none;padding:0 20px}.items-list ul li a{float:right;text-decoration:none;color:#967011}.footer{background-color:#f0f0f1;padding:10px 30px 0}*{box-sizing:border-box}body,html{height:100%}.wrapper{min-height:100%;height:auto;margin-bottom:-35px}.content-wrapper{max-width:1170px;margin:0 auto}.push,footer{height:35px}p{margin:0}.clearfix:after{visibility:hidden;display:block;font-size:0;content:" ";clear:both;height:0}h4{margin:5px 0}@media (max-width:575px){#user,.button{display:none}.button+label{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;padding-left:41px}.nav-wrapper>ul{display:none}.navigation .menu-btn{display:block}.navigation .burger-menu:target{display:block}.navigation .burger-menu:target li,.navigation .burger-menu:target ul{display:block}.navigation .burger-menu:target+a{display:none}.nav-wrapper{justify-content:flex-end;flex:1;padding-right:20px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
